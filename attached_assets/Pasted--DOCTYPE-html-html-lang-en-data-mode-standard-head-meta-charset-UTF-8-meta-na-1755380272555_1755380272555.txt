<!DOCTYPE html>
<html lang="en" data-mode="standard">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, viewport-fit=cover">
    <title>MyNameIs - Secret Sauce Implementation</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary: #9b59b6;
            --primary-dark: #8e44ad;
            --safe-area-top: env(safe-area-inset-top);
            --safe-area-bottom: env(safe-area-inset-bottom);
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #8B7FD4 0%, #9B8FD4 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
            padding-top: calc(20px + var(--safe-area-top));
            padding-bottom: calc(20px + var(--safe-area-bottom));
            transition: background 0.3s ease;
        }

        /* Mode-specific backgrounds */
        html[data-mode="alphabet"] body { background: linear-gradient(135deg, #56CCF2 0%, #2F80ED 100%); }
        html[data-mode="numbers"] body { background: linear-gradient(135deg, #FDC830 0%, #F37335 100%); }
        html[data-mode="actions"] body { background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); }
        html[data-mode="grandparent"] body { 
            background: linear-gradient(135deg, #FFEAA7 0%, #DFE6E9 100%); 
        }
        html[data-mode="grandparent"] { font-size: 18px; }
        html[data-mode="vip"] body { background: linear-gradient(135deg, #FFD700 0%, #FFA500 100%); }

        /* Main Container */
        .app-container {
            background: white;
            border-radius: 24px;
            padding: 40px 30px;
            max-width: 480px;
            width: 100%;
            box-shadow: 0 20px 60px rgba(0,0,0,0.1);
            position: relative;
        }

        /* Info Button - The Secret Door */
        .info-btn {
            position: absolute;
            top: 20px;
            right: 20px;
            width: 36px;
            height: 36px;
            border-radius: 50%;
            background: white;
            border: 2px solid #e0e0e0;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 18px;
            color: #666;
            transition: all 0.3s ease;
            user-select: none;
            -webkit-user-select: none;
            -webkit-tap-highlight-color: transparent;
        }

        .info-btn:hover {
            background: #f8f8f8;
            transform: scale(1.05);
        }

        .info-btn:focus-visible {
            outline: 3px solid var(--primary);
            outline-offset: 2px;
        }

        .info-btn.pressing {
            background: linear-gradient(45deg, var(--primary), var(--primary-dark));
            color: white;
            border-color: var(--primary);
        }

        @media (prefers-reduced-motion: no-preference) {
            .info-btn.pressing {
                animation: pulse 0.6s ease-in-out;
            }
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.1); }
        }

        /* Logo */
        .logo {
            background: linear-gradient(135deg, #B794D4, #9B7BC4);
            color: white;
            padding: 12px 30px;
            border-radius: 30px;
            display: inline-block;
            font-weight: bold;
            font-size: 18px;
            margin-bottom: 30px;
        }

        h1 {
            color: #2c3e50;
            font-size: 48px;
            font-weight: 700;
            margin-bottom: 15px;
        }

        .tagline {
            color: #7f8c8d;
            font-size: 18px;
            margin-bottom: 30px;
        }

        .testimonial {
            color: var(--primary);
            font-size: 16px;
            margin-bottom: 30px;
            display: flex;
            align-items: flex-start;
            gap: 10px;
        }

        .star {
            color: #f1c40f;
            font-size: 20px;
        }

        /* Input Field */
        .name-input {
            width: 100%;
            padding: 18px 20px;
            border: 2px solid #e8e8f0;
            border-radius: 16px;
            font-size: 18px;
            background: #fafafa;
            transition: all 0.3s;
            margin-bottom: 20px;
        }

        .name-input:focus {
            outline: none;
            border-color: var(--primary);
            background: white;
        }

        .name-input:focus-visible {
            outline: 3px solid var(--primary);
            outline-offset: 2px;
        }

        html[data-mode="grandparent"] .name-input {
            font-size: 22px;
            padding: 22px;
        }

        /* Next Button */
        .next-btn {
            width: 100%;
            padding: 18px;
            background: #d5d8dc;
            color: #666;
            border: none;
            border-radius: 16px;
            font-size: 18px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s;
            margin-bottom: 25px;
        }

        .next-btn:hover {
            background: #c5c8cc;
            transform: translateY(-2px);
        }

        .next-btn:focus-visible {
            outline: 3px solid var(--primary);
            outline-offset: 2px;
        }

        html[data-mode="grandparent"] .next-btn {
            font-size: 22px;
            padding: 22px;
        }

        /* Links */
        .help-link {
            color: var(--primary);
            text-decoration: none;
            font-size: 16px;
            display: block;
            text-align: center;
            margin-bottom: 20px;
        }

        .ext-link::after {
            content: "↗";
            font-size: 0.9em;
            margin-left: 0.2em;
            opacity: 0.7;
        }

        .share-btn {
            background: white;
            border: 2px solid #e8e8f0;
            padding: 15px;
            border-radius: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            color: var(--primary);
            font-size: 16px;
            transition: all 0.3s;
            cursor: pointer;
            width: 100%;
        }

        .share-btn:hover {
            border-color: var(--primary);
            transform: translateY(-2px);
        }

        /* Dropdown Menu */
        .dropdown-menu {
            position: absolute;
            top: 65px;
            right: 20px;
            background: white;
            border-radius: 16px;
            box-shadow: 0 10px 40px rgba(0,0,0,0.15);
            padding: 8px;
            min-width: 260px;
            display: none;
            z-index: 1000;
        }

        .dropdown-menu.active {
            display: block;
            animation: slideDown 0.3s ease;
        }

        @keyframes slideDown {
            from {
                opacity: 0;
                transform: translateY(-10px);
            }
        }

        .dropdown-section {
            padding: 8px 0;
            border-bottom: 1px solid #f0f0f0;
        }

        .dropdown-section:last-child {
            border-bottom: none;
        }

        .dropdown-title {
            font-size: 11px;
            color: #999;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            padding: 8px 12px 4px;
            font-weight: 600;
        }

        .dropdown-item {
            padding: 10px 12px;
            cursor: pointer;
            border-radius: 8px;
            transition: all 0.2s;
            display: flex;
            align-items: center;
            gap: 10px;
            font-size: 15px;
            color: #333;
            border: none;
            background: none;
            width: 100%;
            text-align: left;
        }

        .dropdown-item:hover {
            background: #f5f5f5;
        }

        .dropdown-item:focus-visible {
            outline: 2px solid var(--primary);
            outline-offset: -2px;
        }

        .dropdown-item.active {
            background: #f0e6ff;
            color: var(--primary-dark);
            font-weight: 600;
        }

        .dropdown-item.featured {
            background: linear-gradient(135deg, #fff4e6, #ffe8cc);
        }

        .dropdown-item.featured:hover {
            background: linear-gradient(135deg, #ffeed6, #ffdcb8);
        }

        .new-badge {
            background: #ff4757;
            color: white;
            padding: 2px 6px;
            border-radius: 8px;
            font-size: 10px;
            font-weight: bold;
            margin-left: auto;
        }

        /* Info Modal */
        .modal-overlay {
            position: fixed;
            inset: 0;
            background: rgba(0,0,0,0.5);
            display: none;
            place-items: center;
            z-index: 2000;
            padding: 20px;
        }

        .modal-overlay.active {
            display: grid;
            animation: fadeIn 0.3s;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
        }

        .modal-content {
            background: white;
            border-radius: 20px;
            padding: 30px;
            max-width: 400px;
            width: 100%;
        }

        .modal-close {
            background: var(--primary);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 10px;
            font-size: 16px;
            cursor: pointer;
            margin-top: 20px;
            width: 100%;
        }

        .hint {
            background: #f0f9ff;
            padding: 12px;
            border-radius: 8px;
            margin-top: 15px;
            font-size: 13px;
            color: #0288d1;
            font-style: italic;
        }

        /* Mode Indicator */
        .mode-indicator {
            position: fixed;
            top: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(0,0,0,0.8);
            color: white;
            padding: 10px 20px;
            border-radius: 20px;
            font-size: 14px;
            opacity: 0;
            pointer-events: none;
            z-index: 100;
            transition: opacity 0.3s;
        }

        .mode-indicator.show {
            opacity: 1;
        }

        /* Mode Chip (persistent indicator) */
        .mode-chip {
            position: absolute;
            top: -10px;
            left: 50%;
            transform: translateX(-50%);
            background: var(--primary);
            color: white;
            padding: 4px 12px;
            border-radius: 12px;
            font-size: 11px;
            font-weight: 600;
            display: none;
        }

        html[data-mode]:not([data-mode="standard"]) .mode-chip {
            display: block;
        }

        html[data-mode="actions"] .mode-chip { background: #f5576c; }
        html[data-mode="alphabet"] .mode-chip { background: #2F80ED; }
        html[data-mode="numbers"] .mode-chip { background: #F37335; }
        html[data-mode="grandparent"] .mode-chip { background: #DFE6E9; color: #333; }
        html[data-mode="vip"] .mode-chip { background: #FFD700; color: #333; }

        /* Toast Notification */
        .toast {
            position: fixed;
            bottom: 30px;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(0,0,0,0.8);
            color: white;
            padding: 12px 24px;
            border-radius: 20px;
            font-size: 14px;
            opacity: 0;
            pointer-events: none;
            transition: opacity 0.3s;
            z-index: 3000;
        }

        .toast.show {
            opacity: 1;
        }

        /* Screen reader only */
        .sr-only {
            position: absolute;
            width: 1px;
            height: 1px;
            padding: 0;
            margin: -1px;
            overflow: hidden;
            clip: rect(0,0,0,0);
            white-space: nowrap;
            border: 0;
        }

        /* Magic word animation */
        @keyframes magicPulse {
            0% { box-shadow: 0 0 0 0 rgba(155, 89, 182, 0.7); }
            70% { box-shadow: 0 0 0 20px rgba(155, 89, 182, 0); }
            100% { box-shadow: 0 0 0 0 rgba(155, 89, 182, 0); }
        }

        .magic-activated {
            animation: magicPulse 1s;
        }
    </style>
</head>
<body>
    <!-- Mode Indicator -->
    <div class="mode-indicator" id="modeIndicator" role="status" aria-live="polite"></div>
    
    <!-- Toast Notification -->
    <div class="toast" id="toast" role="alert" aria-live="assertive"></div>

    <!-- Main App Container -->
    <div class="app-container">
        <!-- Mode Chip -->
        <div class="mode-chip" id="modeChip"></div>

        <!-- Info Button (Secret Door) -->
        <button 
            class="info-btn" 
            id="infoBtn" 
            aria-label="Information and settings"
            aria-haspopup="menu"
            aria-controls="dropdownMenu"
            aria-expanded="false"
        >ℹ️</button>

        <!-- Dropdown Menu -->
        <div 
            class="dropdown-menu" 
            id="dropdownMenu"
            role="menu"
            aria-labelledby="infoBtn"
        >
            <div class="dropdown-section">
                <button class="dropdown-item" role="menuitem" data-action="info">
                    ℹ️ About MyNameIs
                </button>
            </div>

            <div class="dropdown-section">
                <div class="dropdown-title">Learning Modes</div>
                
                <button class="dropdown-item active" role="menuitem" data-mode="standard">
                    🏠 Standard Mode (Names)
                </button>
                
                <button class="dropdown-item featured" role="menuitem" data-mode="actions">
                    🎬 Action Words (-ING)
                    <span class="new-badge">NEW!</span>
                </button>
                
                <button class="dropdown-item" role="menuitem" data-mode="alphabet">
                    🔤 Alphabet (A-Z)
                </button>
                
                <button class="dropdown-item" role="menuitem" data-mode="numbers">
                    🔢 Numbers (0-9)
                </button>
                
                <button class="dropdown-item" role="menuitem" data-mode="basics">
                    📚 Basics (Colors, Shapes)
                </button>
            </div>

            <div class="dropdown-section">
                <div class="dropdown-title">Accessibility</div>
                
                <button class="dropdown-item" role="menuitem" data-mode="grandparent">
                    👴 Grandparent Mode
                </button>
                
                <button class="dropdown-item" role="menuitem" data-mode="teacher">
                    👨‍🏫 Teacher Mode
                </button>
            </div>

            <div class="dropdown-section">
                <div class="dropdown-title">Privacy</div>
                
                <button class="dropdown-item" role="menuitem" data-mode="vip">
                    🔒 VIP Mode
                    <span class="sr-only">(Maximum Security - no session hints)</span>
                </button>
            </div>
        </div>

        <!-- Logo -->
        <div class="logo">BoredMama</div>

        <!-- Title -->
        <h1>My Name Is</h1>
        <p class="tagline">Teach your child their name with YOUR voice</p>

        <!-- Testimonial -->
        <div class="testimonial">
            <span class="star">⭐</span>
            <span>"My 18-month-old learned all letters phonetically!" - Real parent</span>
        </div>

        <!-- Input Field -->
        <input 
            type="text" 
            class="name-input" 
            id="nameInput"
            placeholder="Enter your child's name"
            autocomplete="off"
            aria-label="Enter your child's name"
        >

        <!-- Next Button -->
        <button class="next-btn" id="nextBtn">
            Next →
        </button>

        <!-- Help Link -->
        <a href="#" class="help-link" id="helpLink">
            Need help? Read 4-minute guide
        </a>

        <!-- Share Button -->
        <button class="share-btn" id="shareBtn">
            Share with friends & family 
            <span aria-hidden="true">🔗</span>
        </button>
    </div>

    <!-- Info Modal -->
    <div 
        class="modal-overlay" 
        id="infoModal"
        role="dialog"
        aria-modal="true"
        aria-labelledby="aboutTitle"
    >
        <div class="modal-content">
            <h2 id="aboutTitle">About MyNameIs</h2>
            <p>The phonics app that doesn't exist on your phone. Like drawing in the sand - it appears when needed and disappears when done.</p>
            
            <p style="margin-top: 15px;"><strong>Complete Privacy:</strong></p>
            <ul style="margin: 10px 0 0 20px; color: #666;">
                <li>No download required</li>
                <li>No data collection</li>
                <li>No storage on device</li>
                <li>Works offline after first load</li>
            </ul>

            <div class="hint">
                💡 Psst... Long-press the ℹ️ button for advanced features 😉
            </div>

            <button class="modal-close" id="modalClose">Got it!</button>
        </div>
    </div>

    <script>
        // State Management
        let isLongPress = false;
        let longPressTimer = null;
        const LONG_PRESS_DURATION = 600;

        // Check for reduced motion preference
        const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;

        // DOM Elements
        const infoBtn = document.getElementById('infoBtn');
        const dropdownMenu = document.getElementById('dropdownMenu');
        const infoModal = document.getElementById('infoModal');
        const modeIndicator = document.getElementById('modeIndicator');
        const modeChip = document.getElementById('modeChip');
        const nameInput = document.getElementById('nameInput');
        const nextBtn = document.getElementById('nextBtn');
        const modalClose = document.getElementById('modalClose');
        const helpLink = document.getElementById('helpLink');
        const shareBtn = document.getElementById('shareBtn');
        const toast = document.getElementById('toast');

        // Mode Management Functions
        function setMode(mode) {
            const url = new URL(location.href);
            if (mode && mode !== 'standard') {
                url.searchParams.set('mode', mode);
            } else {
                url.searchParams.delete('mode');
            }
            history.replaceState(null, '', url.toString());
            applyMode();
        }

        function applyMode() {
            const params = new URLSearchParams(location.search);
            const qsMode = params.get('mode');
            const mode = qsMode || sessionStorage.getItem('mode') || 'standard';
            
            // Set mode on HTML element for CSS hooks
            document.documentElement.setAttribute('data-mode', mode);
            
            // Handle VIP mode
            if (mode === 'vip') {
                try { sessionStorage.clear(); } catch(e) {}
            } else if (mode !== 'standard') {
                sessionStorage.setItem('mode', mode);
            }
            
            // Update UI
            updateDropdownActiveState();
            updateModeChip(mode);
            showModeIndicator(mode);
            updatePlaceholder(mode);
        }

        function updateDropdownActiveState() {
            const currentMode = getCurrentMode();
            document.querySelectorAll('.dropdown-item[data-mode]').forEach(item => {
                item.classList.toggle('active', item.dataset.mode === currentMode);
            });
        }

        function getCurrentMode() {
            const params = new URLSearchParams(location.search);
            return params.get('mode') || sessionStorage.getItem('mode') || 'standard';
        }

        function updateModeChip(mode) {
            const chipText = {
                'actions': '🎬 Actions',
                'alphabet': '🔤 ABC',
                'numbers': '🔢 123',
                'basics': '📚 Basics',
                'grandparent': '👴 Easy',
                'teacher': '👨‍🏫 Teacher',
                'vip': '🔒 VIP'
            };
            modeChip.textContent = chipText[mode] || '';
        }

        function showModeIndicator(mode) {
            if (mode === 'standard') return;
            
            const modeNames = {
                'actions': '🎬 Action Words Mode Active',
                'alphabet': '🔤 Alphabet Mode Active',
                'numbers': '🔢 Numbers Mode Active',
                'basics': '📚 Basics Mode Active',
                'grandparent': '👴 Grandparent Mode Active',
                'teacher': '👨‍🏫 Teacher Mode Active',
                'vip': '🔒 VIP Mode - Maximum Security'
            };
            
            modeIndicator.textContent = modeNames[mode] || `${mode} Mode Active`;
            modeIndicator.classList.add('show');
            
            setTimeout(() => {
                modeIndicator.classList.remove('show');
            }, 3000);
        }

        function updatePlaceholder(mode) {
            const placeholders = {
                'standard': "Enter your child's name",
                'actions': "Type 'ING' or click Next for categories",
                'alphabet': "Enter letters A-Z",
                'numbers': "Enter numbers 0-10",
                'basics': "Enter colors or shapes",
                'grandparent': "TYPE THE CHILD'S NAME",
                'teacher': "Enter multiple names",
                'vip': "Enter name (Maximum Privacy)"
            };
            nameInput.placeholder = placeholders[mode] || placeholders['standard'];
        }

        // Toast Notification
        function showToast(message) {
            toast.textContent = message;
            toast.classList.add('show');
            setTimeout(() => {
                toast.classList.remove('show');
            }, 3000);
        }

        // Dropdown Functions
        function showDropdown() {
            dropdownMenu.classList.add('active');
            infoBtn.setAttribute('aria-expanded', 'true');
            isLongPress = false; // Reset flag
            
            // Focus first menuitem
            const firstItem = dropdownMenu.querySelector('[role="menuitem"]');
            if (firstItem) firstItem.focus();
            
            // Close on outside click
            setTimeout(() => {
                document.addEventListener('click', closeDropdownOnClickOutside);
            }, 100);
        }

        function hideDropdown() {
            dropdownMenu.classList.remove('active');
            infoBtn.setAttribute('aria-expanded', 'false');
            isLongPress = false; // Reset flag
            document.removeEventListener('click', closeDropdownOnClickOutside);
            infoBtn.focus();
        }

        function closeDropdownOnClickOutside(e) {
            if (!dropdownMenu.contains(e.target) && !infoBtn.contains(e.target)) {
                hideDropdown();
            }
        }

        // Modal Functions
        function showInfo() {
            infoModal.classList.add('active');
            infoModal.setAttribute('aria-hidden', 'false');
            modalClose.focus();
            hideDropdown();
        }

        function closeInfo() {
            infoModal.classList.remove('active');
            infoModal.setAttribute('aria-hidden', 'true');
            infoBtn.focus();
        }

        // Long Press Handlers
        function startPress(e) {
            e.preventDefault();
            isLongPress = false;
            infoBtn.classList.add('pressing');
            
            longPressTimer = setTimeout(() => {
                isLongPress = true;
                if (!prefersReducedMotion && navigator.vibrate) {
                    navigator.vibrate(50);
                }
                showDropdown();
            }, LONG_PRESS_DURATION);
        }

        function endPress(e) {
            e.preventDefault();
            clearTimeout(longPressTimer);
            infoBtn.classList.remove('pressing');
        }

        function cancelPress() {
            clearTimeout(longPressTimer);
            infoBtn.classList.remove('pressing');
        }

        // Magic Words Detection
        function checkMagicWords() {
            const value = nameInput.value.trim().toUpperCase();
            const magicWords = {
                'ALPHABET': 'alphabet',
                'ABCDEFGHIJKLMNOPQRSTUVWXYZ': 'alphabet',
                'NUMBERS': 'numbers',
                '0123456789': 'numbers',
                'ING': 'actions',
                'ACTIONS': 'actions',
                'GRANDPA': 'grandparent',
                'GRANDPARENT': 'grandparent',
                'TEACHER': 'teacher',
                'VIP': 'vip'
            };
            
            if (magicWords[value]) {
                nameInput.classList.add('magic-activated');
                setMode(magicWords[value]);
                setTimeout(() => {
                    nameInput.classList.remove('magic-activated');
                }, 1000);
            }
        }

        // Proceed to Next
        function proceedNext() {
            const value = nameInput.value.trim();
            
            if (!value) {
                showToast('Please enter a name or word first');
                return;
            }
            
            const mode = getCurrentMode();
            
            // Different behavior based on mode
            switch(mode) {
                case 'actions':
                    showToast('🎬 Opening Action Words categories...');
                    // Would navigate to -ING categories view
                    break;
                case 'alphabet':
                    showToast('🔤 Starting with A-M...');
                    break;
                case 'numbers':
                    showToast('🔢 Recording 0-9...');
                    break;
                case 'grandparent':
                    showToast('👴 Large text mode active');
                    break;
                case 'teacher':
                    showToast('👨‍🏫 Multiple children mode');
                    break;
                case 'vip':
                    showToast('🔒 Maximum privacy - no traces');
                    break;
                default:
                    showToast(`Recording "${value}" phonetically`);
            }
        }

        // Share Function
        function share() {
            if (navigator.share) {
                navigator.share({
                    title: 'MyNameIs App',
                    text: 'Check out this privacy-first phonics app!',
                    url: window.location.href
                }).catch(() => {}); // Silently handle cancel
            } else {
                // Fallback
                navigator.clipboard.writeText(window.location.href).then(() => {
                    showToast('Link copied to clipboard!');
                });
            }
        }

        // Event Listeners

        // Info Button - Mouse Events
        infoBtn.addEventListener('mousedown', startPress);
        infoBtn.addEventListener('mouseup', endPress);
        infoBtn.addEventListener('mouseleave', cancelPress);
        
        // Info Button - Touch Events
        infoBtn.addEventListener('touchstart', startPress);
        infoBtn.addEventListener('touchend', endPress);
        infoBtn.addEventListener('touchcancel', cancelPress);
        
        // Info Button - Click (for short tap)
        infoBtn.addEventListener('click', (e) => {
            if (isLongPress) {
                isLongPress = false;
                return; // Swallow post-long-press click
            }
            if (!dropdownMenu.classList.contains('active')) {
                showInfo();
            }
        });
        
        // Info Button - Keyboard
        infoBtn.addEventListener('keydown', (e) => {
            if (e.key === 'Enter' || e.key === ' ') {
                if (e.shiftKey) {
                    e.preventDefault();
                    showDropdown();
                } else {
                    e.preventDefault();
                    showInfo();
                }
            }
        });
        
        // Dropdown Menu - Click Handler
        dropdownMenu.addEventListener('click', (e) => {
            const btn = e.target.closest('[data-mode]');
            if (btn) {
                setMode(btn.dataset.mode);
                hideDropdown();
                return;
            }
            
            const actionBtn = e.target.closest('[data-action]');
            if (actionBtn && actionBtn.dataset.action === 'info') {
                showInfo();
            }
        });
        
        // Dropdown Menu - Keyboard Navigation
        dropdownMenu.addEventListener('keydown', (e) => {
            const items = [...dropdownMenu.querySelectorAll('[role="menuitem"]')];
            const currentIndex = items.indexOf(document.activeElement);
            
            switch(e.key) {
                case 'ArrowDown':
                    e.preventDefault();
                    const nextItem = items[currentIndex + 1] || items[0];
                    nextItem.focus();
                    break;
                case 'ArrowUp':
                    e.preventDefault();
                    const prevItem = items[currentIndex - 1] || items[items.length - 1];
                    prevItem.focus();
                    break;
                case 'Home':
                    e.preventDefault();
                    items[0].focus();
                    break;
                case 'End':
                    e.preventDefault();
                    items[items.length - 1].focus();
                    break;
                case 'Escape':
                    hideDropdown();
                    break;
            }
        });
        
        // Modal Close Button
        modalClose.addEventListener('click', closeInfo);
        
        // Modal Overlay Click
        infoModal.addEventListener('click', (e) => {
            if (e.target === infoModal) {
                closeInfo();
            }
        });
        
        // Next Button
        nextBtn.addEventListener('click', proceedNext);
        
        // Share Button
        shareBtn.addEventListener('click', share);
        
        // Help Link
        helpLink.addEventListener('click', (e) => {
            e.preventDefault();
            showToast('Opening help guide...');
            // Would open help documentation
        });
        
        // Magic Words on Input
        nameInput.addEventListener('input', checkMagicWords);
        
        // Magic Words on Enter
        nameInput.addEventListener('keydown', (e) => {
            if (e.key === 'Enter') {
                checkMagicWords();
                proceedNext();
            }
        });
        
        // Global ESC Key Handler
        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape') {
                if (dropdownMenu.classList.contains('active')) {
                    hideDropdown();
                } else if (infoModal.classList.contains('active')) {
                    closeInfo();
                }
            }
        });
        
        // Prevent Context Menu on Info Button
        infoBtn.addEventListener('contextmenu', e => e.preventDefault());
        
        // Handle Browser Back/Forward
        window.addEventListener('popstate', applyMode);
        
        // Initialize on Load
        window.addEventListener('DOMContentLoaded', () => {
            applyMode();
            
            // Console Easter Egg
            console.log(
                '%c🎯 Secret Sauce Activated!',
                'color: #9b59b6; font-size: 20px; font-weight: bold;'
            );
            console.log(
                '%cLong-press ℹ️ or type "ING" to unlock Action Words!',
                'color: #8e44ad; font-size: 14px;'
            );
            console.log(
                '%cMagic words: ING, ALPHABET, NUMBERS, GRANDPA, VIP',
                'color: #8e44ad; font-size: 12px;'
            );
        });
    </script>
</body>
</html>